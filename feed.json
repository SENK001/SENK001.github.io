{
    "version": "https://jsonfeed.org/version/1",
    "title": "Senk的随笔",
    "subtitle": "记录生活的点滴",
    "icon": "http://senk001.github.io/assets/favicon.ico",
    "description": "记录生活的点滴，分享学习的心得体会。",
    "home_page_url": "http://senk001.github.io",
    "items": [
        {
            "id": "http://senk001.github.io/2024/09/26/message-hook/",
            "url": "http://senk001.github.io/2024/09/26/message-hook/",
            "title": "Windows Hook技术：dll注入消息钩子",
            "date_published": "2024-09-25T17:14:54.000Z",
            "content_html": "<blockquote>\n<p>文章中全部代码已开源，请访问 <a href=\"http://github.com/SENK001/DesktopShow\">SENK001/DesktopShow</a></p>\n</blockquote>\n<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>很早之前用过一个动态壁纸软件，这个软件有一个功能非常好用，就是双击桌面空白处显示或隐藏桌面图标。这样既可以无遮挡的欣赏动态壁纸上的 “老婆”，又方便打开桌面上的应用快捷方式。但是后来换成了 Wallpaper Engine 没有这个功能，就想尝试自己实现一个。然后发现实现这个功能并不简单，因为要实现一个进程去监控另一个进程的消息，查阅网上的资料发现需要用到 <code>Windows Hook</code>  技术。 <code>Windows Hook</code>  技术有很多种，这里我们使用 dll 注入消息钩子的方法。</p>\n<h2 id=\"准备\"><a class=\"anchor\" href=\"#准备\">#</a> 准备</h2>\n<p>因为消息钩子只在有消息循环的程序中才有效果，所以我在 Visual Studio 中创建了一个 <code>Win32</code>  项目，然后再在同一解决方案下创建一个动态链接库项目，并在 Win32 项目中引用动态链接库。</p>\n<h2 id=\"原理\"><a class=\"anchor\" href=\"#原理\">#</a> 原理</h2>\n<ol>\n<li>创建一个 <code>Windows Hook</code> ，并设置钩子类型为 <code>WH_MOUSE</code> ，钩子函数为 <code>MouseProc</code> 。</li>\n<li>创建一个 <code>MouseProc</code>  函数，用于处理消息。</li>\n</ol>\n<p>这里用到了一个重要的函数 <code>SetWindowsHookEx</code> ，函数原型如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HHOOK <span class=\"token function\">SetWindowsHookExW</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span>       idHook<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    HOOKPROC  lpfn<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    HINSTANCE hmod<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    DWORD     dwThreadId</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"实现\"><a class=\"anchor\" href=\"#实现\">#</a> 实现</h2>\n<h3 id=\"动态链接库编写\"><a class=\"anchor\" href=\"#动态链接库编写\">#</a> 动态链接库编写</h3>\n<p>创建一个导出函数，创建鼠标钩子，这个函数在 Win32 应用程序中调用。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token function\">_declspec</span><span class=\"token punctuation\">(</span>dllexport<span class=\"token punctuation\">)</span> BOOL <span class=\"token function\">StartHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    hHook <span class=\"token operator\">=</span> <span class=\"token function\">SetWindowsHookEx</span><span class=\"token punctuation\">(</span>WH_MOUSE<span class=\"token punctuation\">,</span> MouseProc<span class=\"token punctuation\">,</span> hInstance<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hHook<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>创建一个鼠标处理函数 <code>MouseProc</code> ，用于处理鼠标消息，这是一个回调函数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">MouseProc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> nCode<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    HWND hDesktop <span class=\"token operator\">=</span> <span class=\"token function\">FindDesktopWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 桌面窗口句柄</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nCode <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wParam <span class=\"token operator\">==</span> WM_MBUTTONDOWN<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            LPMOUSEHOOKSTRUCT pMouse <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LPMOUSEHOOKSTRUCT<span class=\"token punctuation\">)</span>lParam<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pMouse<span class=\"token operator\">-></span>hwnd <span class=\"token operator\">==</span> hDesktop <span class=\"token operator\">||</span> pMouse<span class=\"token operator\">-></span>hwnd <span class=\"token operator\">==</span> <span class=\"token function\">GetParent</span><span class=\"token punctuation\">(</span>hDesktop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IsWindowVisible</span><span class=\"token punctuation\">(</span>hDesktop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>hDesktop<span class=\"token punctuation\">,</span> SW_HIDE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">else</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    <span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>hDesktop<span class=\"token punctuation\">,</span> SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">CallNextHookEx</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> nCode<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>FindDesktopWindow</code>  函数用于获取桌面窗口的句柄， <code>GetParent</code>  函数用于获取桌面窗口的父窗口，即桌面窗口。</p>\n<p><code>IsWindowVisible</code>  函数用于判断窗口是否可见，如果可见则隐藏，否则显示。</p>\n<p><code>CallNextHookEx</code>  函数用于调用下一个钩子函数，如果没有下一个钩子函数，则返回 0。</p>\n<blockquote>\n<p><code>FindDesktopWindow</code>  函数不是我自己写的，是复制自<a href=\"https://www.cnblogs.com/vcerror\"> @vcerror</a> 的这篇文章<a href=\"https://www.cnblogs.com/vcerror/p/4289108.html\">如何 HOOK 桌面窗口消息</a>中的 <code>FindShellWindow</code>  函数，这里我就不贴代码了。</p>\n</blockquote>\n<p>创建一个导出函数，用于卸载钩子，这个函数在 Win32 应用程序中调用。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token function\">_declspec</span><span class=\"token punctuation\">(</span>dllexport<span class=\"token punctuation\">)</span> <span class=\"token keyword\">void</span> <span class=\"token function\">StopHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hHook<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">UnhookWindowsHookEx</span><span class=\"token punctuation\">(</span>hHook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        hHook <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"win32应用程序编写\"><a class=\"anchor\" href=\"#win32应用程序编写\">#</a> Win32 应用程序编写</h3>\n<p>关于如何创建窗口，这里不细说，只给出 <code>WndProc</code>  函数</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">WndProc</span><span class=\"token punctuation\">(</span>HWND hWnd<span class=\"token punctuation\">,</span> UINT message<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 加载动态链接库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hLib<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        hLib <span class=\"token operator\">=</span> <span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"MouseHookDll.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hLib <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"加载动态链接库失败\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"错误\"</span><span class=\"token punctuation\">,</span> MB_OK <span class=\"token operator\">|</span> MB_ICONERROR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        StartHookFunc <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">reinterpret_cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token function\">BOOL</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span>hLib<span class=\"token punctuation\">,</span> <span class=\"token string\">\"StartHook\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        StopHookFunc <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">reinterpret_cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token function\">GetProcAddress</span><span class=\"token punctuation\">(</span>hLib<span class=\"token punctuation\">,</span> <span class=\"token string\">\"StopHook\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>StartHookFunc <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>StopHookFunc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token function\">FreeLibrary</span><span class=\"token punctuation\">(</span>hLib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">case</span> WM_CREATE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        nid<span class=\"token punctuation\">.</span>cbSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>nid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        nid<span class=\"token punctuation\">.</span>hWnd <span class=\"token operator\">=</span> hWnd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        nid<span class=\"token punctuation\">.</span>uID <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        nid<span class=\"token punctuation\">.</span>uFlags <span class=\"token operator\">=</span> NIF_ICON <span class=\"token operator\">|</span> NIF_MESSAGE <span class=\"token operator\">|</span> NIF_TIP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        nid<span class=\"token punctuation\">.</span>uCallbackMessage <span class=\"token operator\">=</span> WM_USER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        nid<span class=\"token punctuation\">.</span>hIcon <span class=\"token operator\">=</span> <span class=\"token function\">LoadIcon</span><span class=\"token punctuation\">(</span>hInst<span class=\"token punctuation\">,</span> <span class=\"token function\">MAKEINTRESOURCE</span><span class=\"token punctuation\">(</span>IDI_SMALL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token function\">lstrcpy</span><span class=\"token punctuation\">(</span>nid<span class=\"token punctuation\">.</span>szTip<span class=\"token punctuation\">,</span> szTitle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token function\">Shell_NotifyIcon</span><span class=\"token punctuation\">(</span>NIM_ADD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>nid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        hMenu <span class=\"token operator\">=</span> <span class=\"token function\">CreatePopupMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 生成菜单</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token function\">AppendMenu</span><span class=\"token punctuation\">(</span>hMenu<span class=\"token punctuation\">,</span> MF_STRING<span class=\"token punctuation\">,</span> IDC_START_HOOK<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"开始服务\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 添加菜单项</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token function\">AppendMenu</span><span class=\"token punctuation\">(</span>hMenu<span class=\"token punctuation\">,</span> MF_STRING<span class=\"token punctuation\">,</span> IDC_STOP_HOOK<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"暂停服务\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token function\">AppendMenu</span><span class=\"token punctuation\">(</span>hMenu<span class=\"token punctuation\">,</span> MF_STRING <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">CheckStartup</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> MF_CHECKED <span class=\"token operator\">:</span> MF_UNCHECKED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IDC_SELFSTART<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"开机启动\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token function\">AppendMenu</span><span class=\"token punctuation\">(</span>hMenu<span class=\"token punctuation\">,</span> MF_SEPARATOR<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">AppendMenu</span><span class=\"token punctuation\">(</span>hMenu<span class=\"token punctuation\">,</span> MF_STRING<span class=\"token punctuation\">,</span> IDC_ABOUT<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"关于\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token function\">AppendMenu</span><span class=\"token punctuation\">(</span>hMenu<span class=\"token punctuation\">,</span> MF_STRING<span class=\"token punctuation\">,</span> IDC_QUIT<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"退出\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        isHook <span class=\"token operator\">=</span> <span class=\"token function\">StartHookFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">case</span> WM_USER<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lParam <span class=\"token operator\">==</span> WM_RBUTTONDOWN<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            POINT pt<span class=\"token punctuation\">;</span><span class=\"token comment\">// 用于接收鼠标坐标</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">int</span> Select <span class=\"token operator\">=</span> IDC_START_HOOK<span class=\"token punctuation\">;</span><span class=\"token comment\">// 用于接收菜单选项返回值</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token function\">GetCursorPos</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 取鼠标坐标  </span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetForegroundWindow</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 解决在菜单外单击左键菜单不消失的问题</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token function\">UpdateMenuItems</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 更新菜单</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            Select <span class=\"token operator\">=</span> <span class=\"token function\">TrackPopupMenu</span><span class=\"token punctuation\">(</span>hMenu<span class=\"token punctuation\">,</span> TPM_RETURNCMD<span class=\"token punctuation\">,</span> pt<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> pt<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> hWnd<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 显示菜单并获取选项 ID</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>Select<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">case</span> IDC_START_HOOK<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                isHook <span class=\"token operator\">=</span> <span class=\"token function\">StartHookFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token keyword\">case</span> IDC_STOP_HOOK<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token function\">StopHookFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                isHook <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token keyword\">case</span> IDC_SELFSTART<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token function\">CheckStartup</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">DisableStartup</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">EnableStartup</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 启用或禁用开机启动</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token keyword\">case</span> IDC_ABOUT<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                <span class=\"token function\">DialogBox</span><span class=\"token punctuation\">(</span>hInst<span class=\"token punctuation\">,</span> <span class=\"token function\">MAKEINTRESOURCE</span><span class=\"token punctuation\">(</span>IDD_ABOUTBOX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> hWnd<span class=\"token punctuation\">,</span> About<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">case</span> IDC_QUIT<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token function\">PostMessage</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> WM_DESTROY<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">case</span> WM_DESTROY<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isHook<span class=\"token punctuation\">)</span> <span class=\"token function\">StopHookFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hLib<span class=\"token punctuation\">)</span> <span class=\"token function\">FreeLibrary</span><span class=\"token punctuation\">(</span>hLib<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token function\">Shell_NotifyIcon</span><span class=\"token punctuation\">(</span>NIM_DELETE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>nid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token function\">PostQuitMessage</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message <span class=\"token operator\">==</span> WM_TASKBARCREATED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> WM_CREATE<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol>\n<li>首先，在 <code>WndProc</code>  函数中，我们加载了动态链接库 <code>MouseHookDll.dll</code> ，并获取了导出函数 <code>StartHook</code>  和 <code>StopHook</code>  的函数指针。如果加载失败，则返回 - 1。</li>\n<li>接下来，我们根据不同的消息类型，开启和关闭钩子，并更新菜单。</li>\n<li>最后，在 <code>WM_DESTROY</code>  消息中，我们释放了动态链接库和删除了通知图标。</li>\n</ol>\n<h2 id=\"参考资料\"><a class=\"anchor\" href=\"#参考资料\">#</a> 参考资料</h2>\n<ol>\n<li>Windows API 参考：<a href=\"https://docs.microsoft.com/zh-cn/windows/win32/api/winuser/\">https://docs.microsoft.com/zh-cn/windows/win32/api/winuser/</a></li>\n<li>C++ HOOK 实现全局键盘钩子的详细过程：<a href=\"https://blog.csdn.net/qq_43851684/article/details/112759669\">https://blog.csdn.net/qq_43851684/article/details/112759669</a></li>\n<li>如何 HOOK 桌面窗口消息：<a href=\"https://www.cnblogs.com/vcerror/p/4289108.html\">https://www.cnblogs.com/vcerror/p/4289108.html</a></li>\n<li>windows API 创建系统托盘图标：<a href=\"https://www.cnblogs.com/vcerror/p/4289014.html\">https://www.cnblogs.com/vcerror/p/4289014.html</a></li>\n</ol>\n",
            "tags": [
                "Windows Hook"
            ]
        }
    ]
}